window.DocsSearchModuleIndex = [[{"values":[],"tag":"LocalPackage"},["DoctorNix","TS","Test.Main","Test.Miraculix","Test.Miraculix.Assertion","Test.Miraculix.FFI","Test.Miraculix.Nix.Docs","Test.Miraculix.Nix.Internal","Test.Miraculix.Summary","Test.Miraculix.TestTree","Test.Miraculix.Typo","Test.Util","Tests.Test.Miraculix.Nix"]],[{"values":[],"tag":"Builtin"},["Prim","Prim.Boolean","Prim.Coerce","Prim.Ordering","Prim.Row","Prim.RowList","Prim.Symbol","Prim.TypeError"]],[{"values":["arrays"],"tag":"Package"},["Data.Array","Data.Array.NonEmpty","Data.Array.NonEmpty.Internal","Data.Array.Partial","Data.Array.ST","Data.Array.ST.Iterator","Data.Array.ST.Partial"]],[{"values":["bifunctors"],"tag":"Package"},["Control.Biapplicative","Control.Biapply","Data.Bifunctor","Data.Bifunctor.Join"]],[{"values":["const"],"tag":"Package"},["Data.Const"]],[{"values":["contravariant"],"tag":"Package"},["Data.Comparison","Data.Decidable","Data.Decide","Data.Divide","Data.Divisible","Data.Equivalence","Data.Functor.Contravariant","Data.Op","Data.Predicate"]],[{"values":["control"],"tag":"Package"},["Control.Alt","Control.Alternative","Control.Comonad","Control.Extend","Control.Lazy","Control.MonadPlus","Control.MonadZero","Control.Plus","Data.Monoid.Alternate"]],[{"values":["distributive"],"tag":"Package"},["Data.Distributive"]],[{"values":["effect"],"tag":"Package"},["Effect"]],[{"values":["either"],"tag":"Package"},["Data.Either","Data.Either.Inject","Data.Either.Nested"]],[{"values":["exists"],"tag":"Package"},["Data.Exists"]],[{"values":["foldable-traversable"],"tag":"Package"},["Data.Bifoldable","Data.Bitraversable","Data.Foldable","Data.FoldableWithIndex","Data.FunctorWithIndex","Data.Semigroup.Foldable","Data.Semigroup.Traversable","Data.Traversable","Data.Traversable.Accum","Data.Traversable.Accum.Internal","Data.TraversableWithIndex"]],[{"values":["foreign"],"tag":"Package"},["Foreign"]],[{"values":["foreign-object"],"tag":"Package"},["Foreign.Object"]],[{"values":["foreign-path"],"tag":"Package"},["Foreign.Path"]],[{"values":["functors"],"tag":"Package"},["Data.Functor.App","Data.Functor.Clown","Data.Functor.Compose","Data.Functor.Coproduct","Data.Functor.Coproduct.Inject","Data.Functor.Coproduct.Nested","Data.Functor.Costar","Data.Functor.Flip","Data.Functor.Joker","Data.Functor.Product","Data.Functor.Product.Nested","Data.Functor.Product2"]],[{"values":["identity"],"tag":"Package"},["Data.Identity"]],[{"values":["invariant"],"tag":"Package"},["Data.Functor.Invariant"]],[{"values":["maybe"],"tag":"Package"},["Data.Maybe","Data.Maybe.First","Data.Maybe.Last"]],[{"values":["miraculix-lite"],"tag":"Package"},["LocalDependency.Control.Alt","LocalDependency.Control.Alternative","LocalDependency.Control.Biapplicative","LocalDependency.Control.Biapply","LocalDependency.Control.Comonad","LocalDependency.Control.Extend","LocalDependency.Control.Lazy","LocalDependency.Control.MonadPlus","LocalDependency.Control.MonadZero","LocalDependency.Control.Plus","LocalDependency.Data.Bifoldable","LocalDependency.Data.Bifunctor","LocalDependency.Data.Bifunctor.Join","LocalDependency.Data.Bitraversable","LocalDependency.Data.Comparison","LocalDependency.Data.Const","LocalDependency.Data.Decidable","LocalDependency.Data.Decide","LocalDependency.Data.Distributive","LocalDependency.Data.Divide","LocalDependency.Data.Divisible","LocalDependency.Data.Either","LocalDependency.Data.Either.Inject","LocalDependency.Data.Either.Nested","LocalDependency.Data.Equivalence","LocalDependency.Data.Exists","LocalDependency.Data.Foldable","LocalDependency.Data.FoldableWithIndex","LocalDependency.Data.Functor.App","LocalDependency.Data.Functor.Clown","LocalDependency.Data.Functor.Compose","LocalDependency.Data.Functor.Contravariant","LocalDependency.Data.Functor.Coproduct","LocalDependency.Data.Functor.Coproduct.Inject","LocalDependency.Data.Functor.Coproduct.Nested","LocalDependency.Data.Functor.Costar","LocalDependency.Data.Functor.Flip","LocalDependency.Data.Functor.Invariant","LocalDependency.Data.Functor.Joker","LocalDependency.Data.Functor.Product","LocalDependency.Data.Functor.Product.Nested","LocalDependency.Data.Functor.Product2","LocalDependency.Data.FunctorWithIndex","LocalDependency.Data.Identity","LocalDependency.Data.Maybe","LocalDependency.Data.Maybe.First","LocalDependency.Data.Maybe.Last","LocalDependency.Data.Monoid.Alternate","LocalDependency.Data.Op","LocalDependency.Data.Predicate","LocalDependency.Data.Profunctor","LocalDependency.Data.Profunctor.Choice","LocalDependency.Data.Profunctor.Closed","LocalDependency.Data.Profunctor.Cochoice","LocalDependency.Data.Profunctor.Costrong","LocalDependency.Data.Profunctor.Join","LocalDependency.Data.Profunctor.Split","LocalDependency.Data.Profunctor.Star","LocalDependency.Data.Profunctor.Strong","LocalDependency.Data.Semigroup.Foldable","LocalDependency.Data.Semigroup.Traversable","LocalDependency.Data.Traversable","LocalDependency.Data.Traversable.Accum","LocalDependency.Data.Traversable.Accum.Internal","LocalDependency.Data.TraversableWithIndex","LocalDependency.Data.Tuple","LocalDependency.Data.Tuple.Nested","LocalDependency.Effect","LocalDependency.Safe.Coerce","LocalDependency.Type.Equality","LocalDependency.Unsafe.Coerce","Test.MiraculixLite","Test.MiraculixLite.Assertion","Test.MiraculixLite.FFI","Test.MiraculixLite.Summary","Test.MiraculixLite.TestTree","Test.MiraculixLite.Typo"]],[{"values":["newtype"],"tag":"Package"},["Data.Newtype"]],[{"values":["nonempty"],"tag":"Package"},["Data.NonEmpty"]],[{"values":["orders"],"tag":"Package"},["Data.Ord.Down","Data.Ord.Max","Data.Ord.Min"]],[{"values":["partial"],"tag":"Package"},["Partial","Partial.Unsafe"]],[{"values":["prelude"],"tag":"Package"},["Control.Applicative","Control.Apply","Control.Bind","Control.Category","Control.Monad","Control.Semigroupoid","Data.Boolean","Data.BooleanAlgebra","Data.Bounded","Data.Bounded.Generic","Data.CommutativeRing","Data.DivisionRing","Data.Eq","Data.Eq.Generic","Data.EuclideanRing","Data.Field","Data.Function","Data.Functor","Data.Generic.Rep","Data.HeytingAlgebra","Data.HeytingAlgebra.Generic","Data.Monoid","Data.Monoid.Additive","Data.Monoid.Conj","Data.Monoid.Disj","Data.Monoid.Dual","Data.Monoid.Endo","Data.Monoid.Generic","Data.Monoid.Multiplicative","Data.NaturalTransformation","Data.Ord","Data.Ord.Generic","Data.Ordering","Data.Ring","Data.Ring.Generic","Data.Semigroup","Data.Semigroup.First","Data.Semigroup.Generic","Data.Semigroup.Last","Data.Semiring","Data.Semiring.Generic","Data.Show","Data.Show.Generic","Data.Symbol","Data.Unit","Data.Void","Record.Unsafe","Type.Data.Row","Type.Data.RowList","Type.Proxy"]],[{"values":["profunctor"],"tag":"Package"},["Data.Profunctor","Data.Profunctor.Choice","Data.Profunctor.Closed","Data.Profunctor.Cochoice","Data.Profunctor.Costrong","Data.Profunctor.Join","Data.Profunctor.Split","Data.Profunctor.Star","Data.Profunctor.Strong"]],[{"values":["safe-coerce"],"tag":"Package"},["Safe.Coerce"]],[{"values":["st"],"tag":"Package"},["Control.Monad.ST.Class","Control.Monad.ST.Internal"]],[{"values":["tuples"],"tag":"Package"},["Data.Tuple","Data.Tuple.Nested"]],[{"values":["type-equality"],"tag":"Package"},["Type.Equality"]],[{"values":["unfoldable"],"tag":"Package"},["Data.Unfoldable","Data.Unfoldable1"]],[{"values":["unsafe-coerce"],"tag":"Package"},["Unsafe.Coerce"]]]