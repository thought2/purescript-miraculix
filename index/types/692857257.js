// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["692857257"] = [{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/miraculix-lite/9b3a8ced22c78fe0e8ea1cd7352df5f5dae1dfbd/src/deps/tuples/Data/Tuple.purs","end":[122,34]},"score":0,"packageInfo":{"values":["miraculix-lite"],"tag":"Package"},"name":"snd","moduleName":"LocalDependency.Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LocalDependency","Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the second component of a tuple.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/miraculix-lite/9b3a8ced22c78fe0e8ea1cd7352df5f5dae1dfbd/src/deps/tuples/Data/Tuple.purs","end":[118,34]},"score":0,"packageInfo":{"values":["miraculix-lite"],"tag":"Package"},"name":"fst","moduleName":"LocalDependency.Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LocalDependency","Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the first component of a tuple.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/miraculix-lite/9b3a8ced22c78fe0e8ea1cd7352df5f5dae1dfbd/src/deps/tuples/Data/Tuple/Nested.purs","end":[137,32]},"score":0,"packageInfo":{"values":["miraculix-lite"],"tag":"Package"},"name":"get1","moduleName":"LocalDependency.Data.Tuple.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["z",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LocalDependency","Data","Tuple","Nested"],"T2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given at least a singleton tuple, gets the first value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[221,1],"name":".spago/miraculix-lite/9b3a8ced22c78fe0e8ea1cd7352df5f5dae1dfbd/src/deps/either/Data/Either.purs","end":[221,45]},"score":0,"packageInfo":{"values":["miraculix-lite"],"tag":"Package"},"name":"isRight","moduleName":"LocalDependency.Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LocalDependency","Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Either` value was constructed with `Right`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/miraculix-lite/9b3a8ced22c78fe0e8ea1cd7352df5f5dae1dfbd/src/deps/either/Data/Either.purs","end":[217,44]},"score":0,"packageInfo":{"values":["miraculix-lite"],"tag":"Package"},"name":"isLeft","moduleName":"LocalDependency.Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["LocalDependency","Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Either` value was constructed with `Left`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/miraculix-lite/9b3a8ced22c78fe0e8ea1cd7352df5f5dae1dfbd/src/deps/foldable-traversable/Data/Bifoldable.purs","end":[142,61]},"score":0,"packageInfo":{"values":["miraculix-lite"],"tag":"Package"},"name":"bifold","moduleName":"LocalDependency.Data.Bifoldable","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["LocalDependency","Data","Bifoldable"],"Bifoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure, accumulating values in a monoidal type.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/tuples/1ea47bb6ff4f5aa04a42ca01c3a78bca48160743/src/Data/Tuple.purs","end":[122,34]},"score":0,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"snd","moduleName":"Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the second component of a tuple.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/tuples/1ea47bb6ff4f5aa04a42ca01c3a78bca48160743/src/Data/Tuple.purs","end":[118,34]},"score":0,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"fst","moduleName":"Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the first component of a tuple.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/tuples/1ea47bb6ff4f5aa04a42ca01c3a78bca48160743/src/Data/Tuple/Nested.purs","end":[137,32]},"score":0,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"get1","moduleName":"Data.Tuple.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["z",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"z"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given at least a singleton tuple, gets the first value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/nonempty/467f1cf3810b9697b6a69ed5db3d4631e044c876/src/Data/NonEmpty.purs","end":[112,38]},"score":0,"packageInfo":{"values":["nonempty"],"tag":"Package"},"name":"head","moduleName":"Data.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the 'first' element of a non-empty container.\n\n```purescript\nhead (1 :| [2, 3]) == 1\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[221,1],"name":".spago/either/3169946c381a961c8ccbfa078748cc4a87c80766/src/Data/Either.purs","end":[221,45]},"score":0,"packageInfo":{"values":["either"],"tag":"Package"},"name":"isRight","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Either` value was constructed with `Right`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/either/3169946c381a961c8ccbfa078748cc4a87c80766/src/Data/Either.purs","end":[217,44]},"score":0,"packageInfo":{"values":["either"],"tag":"Package"},"name":"isLeft","moduleName":"Data.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` when the `Either` value was constructed with `Left`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/foldable-traversable/bbb02b2752b1f1520c7c0b9f79bf7152002e989a/src/Data/Bifoldable.purs","end":[142,61]},"score":0,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"bifold","moduleName":"Data.Bifoldable","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Fold a data structure, accumulating values in a monoidal type.\n"}],"tag":"SearchResult"}]