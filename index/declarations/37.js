// This file was generated by purescript-docs-search.
window.DocsSearchIndex["37"] = [["type",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Type","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Type` is the kind of all proper types: those that classify value-level terms.\nFor example the type `Boolean` has kind `Type`; denoted by `Boolean :: Type`.\n"}],"tag":"SearchResult"}]],["typeequals",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/type-equality/master/src/Type/Equality.purs","end":[22,32]},"score":0,"packageInfo":{"values":["type-equality"],"tag":"Package"},"name":"TypeEquals","moduleName":"Type.Equality","info":{"values":[{"superclasses":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}],"fundeps":[[["a"],["b"]],[["b"],["a"]]],"arguments":[["a",null],["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"This type class asserts that types `a` and `b`\nare equal.\n\nThe functional dependencies and the single\ninstance below will force the two type arguments\nto unify when either one is known.\n\nNote: any instance will necessarily overlap with\n`refl` below, so instances of this class should\nnot be defined in libraries.\n"}],"tag":"SearchResult"}]]]